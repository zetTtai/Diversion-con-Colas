<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Temporizador.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>